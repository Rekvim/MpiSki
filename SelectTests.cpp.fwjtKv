#include "selecttests.h"
#include "ui_selecttests.h"

SelectTests::SelectTests(QWidget *parent)
    : QDialog(parent)
    , ui(new Ui::SelectTests)
    , currentWindow(nullptr)
{
    ui->setupUi(this);

    // Инициализация чекбоксов
    checkboxes[0] = ui->pressure_1;
    checkboxes[1] = ui->pressure_2;
    checkboxes[2] = ui->pressure_3;
    checkboxes[3] = ui->moving;
    checkboxes[4] = ui->input_4_20_mA;
    checkboxes[5] = ui->output_4_20_mA;
    checkboxes[6] = ui->usb;
    checkboxes[7] = ui->imit_switch_0_3;
    checkboxes[8] = ui->imit_switch_3_0;
    checkboxes[9] = ui->do_1;
    checkboxes[10] = ui->do_2;
    checkboxes[11] = ui->do_3;
    checkboxes[12] = ui->do_4;

    // Цвет виджетов
    ui->pressure_1_color->setStyleSheet("background-color: #2A689F;");
    ui->pressure_2_color->setStyleSheet("background-color: #457448;");
    ui->pressure_3_color->setStyleSheet("background-color: #D3BB2A;");
    ui->moving_color->setStyleSheet("background-color: #CC9546;");
    ui->input_4_20_mA_color->setStyleSheet("background-color: #A83240;");
    ui->output_4_20_mA_color->setStyleSheet("background-color: #A83240;");
    ui->usb_color->setStyleSheet("background-color: #25262B;");
    ui->imit_switch_0_3_color->setStyleSheet("background-color: #463564;");
    ui->imit_switch_3_0_color->setStyleSheet("background-color: #463564;");
    ui->do_1_color->setStyleSheet("background-color: #25262B;");
    ui->do_2_color->setStyleSheet("background-color: #25262B;");
    ui->do_3_color->setStyleSheet("background-color: #25262B;");
    ui->do_4_color->setStyleSheet("background-color: #25262B;");
}

SelectTests::~SelectTests()
{
    delete ui;
    delete currentWindow;  // Удаляем окно при закрытии
}

void SelectTests::onCheckBoxChanged()
{
    // Комплексных; Отсечной Арматуры
    if (checkboxes[6]->isChecked()
        && checkboxes[4]->isChecked()
        && checkboxes[7]->isChecked()
        && checkboxes[8]->isChecked()
        && checkboxes[9]->isChecked()
        )
    {

    }
    // Базовых; Запорно-Регулирующей Арматуры
    else if (checkboxes[6]->isChecked()
        && checkboxes[4]->isChecked()
        && checkboxes[5]->isChecked()
        && checkboxes[7]->isChecked()
        && checkboxes[8]->isChecked()
        && checkboxes[9]->isChecked()
       )
    {

    }
    // Комплексных; Отсечной Арматуры
    else if (checkboxes[6]->isChecked()
        && checkboxes[1]->isChecked()
        && checkboxes[1]->isChecked()
        && checkboxes[1]->isChecked()
        && checkboxes[1]->isChecked()
        )
    {

    }
    else if (checkboxes[6]->isChecked()
        && checkboxes[1]->isChecked()
        && checkboxes[1]->isChecked()
        && checkboxes[1]->isChecked()
        && checkboxes[1]->isChecked()
        )
    {

    }
    else if (checkboxes[6]->isChecked()
        && checkboxes[1]->isChecked()
        && checkboxes[1]->isChecked()
        && checkboxes[1]->isChecked()
        && checkboxes[1]->isChecked()
        )
    {

    }
    else {

    }
}

















